colnames(dat2)[8] = "recog"
##fix out of range JOLs
dat2$JOL[dat2$JOL > 100] = NA
RT_data = dat2[ , c(1, 2, 5:7, 3)]
dat2 = dat2[ , -3]
####Check the data####
##get the data in long format
dat.long = melt(dat2,
measure.vars = c("JOL", "recog"))
#fix new dataframe colnames
colnames(dat.long)[6:7] = c("Task", "Score")
##make the subsets
white = subset(dat.long,
dat.long$participant.ethnicity == "White")
black = subset(dat.long,
dat.long$participant.ethnicity == "Black")
##and, finally, get the means
tapply(white$Score, list(white$Task, white$Target_Ethnicity), mean, na.rm = T) #Nope
tapply(black$Score, list(black$Task, black$Target_Ethnicity), mean, na.rm = T) #yes
##check for outliers
##white
white.wide = cast(subset(white,
white$Task == "recog"),
Username ~ Target_Ethnicity, mean)
white.wide$diff = (white.wide$B - white.wide$W)
##black
black.wide = cast(subset(black,
black$Task == "recog"),
Username ~ Target_Ethnicity, mean)
black.wide$diff = (black.wide$W - black.wide$B)
####What about typicality?####
##make the subsets
white.low = subset(white,
white$Target_Typicality == "L")
white.high = subset(white,
white$Target_Typicality == "H")
black.low = subset(black,
black$Target_Typicality == "L")
black.high = subset(black,
black$Target_Typicality == "H")
##white
white.wide.h = cast(subset(white.high,
white.high$Task == "recog"),
Username ~ Target_Ethnicity, mean)
white.wide.h$diff = (white.wide.h$B - white.wide.h$W)
white.wide.l = cast(subset(white.low,
white.high$Task == "recog"),
Username ~ Target_Ethnicity, mean)
white.wide.l$diff = (white.wide.l$B - white.wide.l$W)
##black
black.wide.h = cast(subset(black.high,
black.high$Task == "recog"),
Username ~ Target_Ethnicity, mean)
black.wide.h$diff = (black.wide.h$B - black.wide.h$W)
black.wide.l = cast(subset(black.low,
black.low$Task == "recog"),
Username ~ Target_Ethnicity, mean)
black.wide.l$diff = (black.wide.l$B - black.wide.l$W)
##recall looks fine. Any participants not doing the JOL task?
white.wide.jol = cast(subset(white,
white$Task == "JOL"),
Username ~ Target_Ethnicity, mean, na.rm = T)
black.wide.jol = cast(subset(black,
black$Task == "JOL"),
Username ~ Target_Ethnicity, mean, na.rm = T)
##and do it again for typicality
##white
white.wide.h.j = cast(subset(white.high,
white.high$Task == "JOL"),
Username ~ Target_Ethnicity, mean)
white.wide.l.j = cast(subset(white.low,
white.high$Task == "JOL"),
Username ~ Target_Ethnicity, mean)
##black
black.wide.h.j = cast(subset(black.high,
black.high$Task == "JOL"),
Username ~ Target_Ethnicity, mean)
black.wide.l.j = cast(subset(black.low,
black.low$Task == "JOL"),
Username ~ Target_Ethnicity, mean)
##get the means
#white participants
tapply(white$Score, list(white$Task, white$Target_Ethnicity), mean, na.rm = T) #Nope #Full dataset
tapply(white.low$Score, list(white.low$Task, white.low$Target_Ethnicity), mean, na.rm = T) #better at the low typicality black
tapply(white.high$Score, list(white.high$Task, white.high$Target_Ethnicity), mean, na.rm = T) #there we go!
##black participants
tapply(black$Score, list(black$Task, black$Target_Ethnicity), mean, na.rm = T) #small, but right direction
tapply(black.low$Score, list(black.low$Task, black.low$Target_Ethnicity), mean, na.rm = T) # slightly bigger
tapply(black.high$Score, list(black.high$Task, black.high$Target_Ethnicity), mean, na.rm = T) # slightly smaller
###get 95% CIs
##recog
#white
(apply(white.wide.h[ , c(2:3)], 2, sd) / sqrt(nrow(white.wide.h))) * 1.96
(apply(white.wide.l[ , c(2:3)], 2, sd) / sqrt(nrow(white.wide.l))) * 1.96
#black
(apply(black.wide.h[ , c(2:3)], 2, sd) / sqrt(nrow(black.wide.h))) * 1.96
(apply(black.wide.l[ , c(2:3)], 2, sd) / sqrt(nrow(black.wide.l))) * 1.96
##JOLs
#white
(apply(white.wide.h.j[ , c(2:3)], 2, sd, na.rm = T) / sqrt(nrow(white.wide.h.j))) * 1.96
(apply(white.wide.l.j[ , c(2:3)], 2, sd, na.rm = T) / sqrt(nrow(white.wide.l.j))) * 1.96
#black
(apply(black.wide.h.j[ , c(2:3)], 2, sd, na.rm = T) / sqrt(nrow(black.wide.h.j))) * 1.96
(apply(black.wide.l.j[ , c(2:3)], 2, sd, na.rm = T) / sqrt(nrow(black.wide.l.j))) * 1.96
####Run the ANOVAs####
##recombine
combined = rbind(white, black)
table(combined$participant.ethnicity) / 80 #78 black; 79 white
com.JOL = subset(combined,
combined$Task == "JOL")
com.JOL = na.omit(com.JOL)
####Run the ANOVAs####
##High targets
model.high = ezANOVA(subset(com.JOL,
com.JOL$Target_Typicality == "H"),
dv = Score,
within = Target_Ethnicity,
between = participant.ethnicity,
wid = Username,
type = 3,
detailed = T)
model.high$ANOVA$MSE = model.high$ANOVA$SSd/model.high$ANOVA$DFd
aovEffectSize(model.high, effectSize = "pes")
##Low targets
model.low = ezANOVA(subset(com.JOL,
com.JOL$Target_Typicality == "L"),
dv = Score,
within = Target_Ethnicity,
between = participant.ethnicity,
wid = Username,
type = 3,
detailed = T)
model.low$ANOVA$MSE = model.low$ANOVA$SSd/model.low$ANOVA$DFd
aovEffectSize(model.low, effectSize = "pes")
#make subsets to get means
high = subset(com.JOL,
com.JOL$Target_Typicality == "H")
low = subset(com.JOL,
com.JOL$Target_Typicality == "L")
tapply(high$Score, high$participant.ethnicity, mean) #main effect participant ethnicity
tapply(high$Score, high$Target_Ethnicity, mean) #main effect target ethnicity
tapply(high$Score, list(high$Target_Ethnicity, high$participant.ethnicity), mean) #interaction
tapply(low$Score, low$participant.ethnicity, mean)
tapply(low$Score, low$Target_Ethnicity, mean)
tapply(low$Score, list(low$Target_Ethnicity, low$participant.ethnicity), mean)
####Break down the interaction####
#get the correct comparisons
JOL.b2.h = cast(subset(com.JOL,
com.JOL$participant.ethnicity == "Black" & com.JOL$Target_Typicality == "H"),
Username ~ Target_Ethnicity, mean)
JOL.w2.h = cast(subset(com.JOL,
com.JOL$participant.ethnicity == "White" & com.JOL$Target_Typicality == "H"),
Username ~ Target_Ethnicity, mean)
JOL.b2.l = cast(subset(com.JOL,
com.JOL$participant.ethnicity == "Black" & com.JOL$Target_Typicality == "L"),
Username ~ Target_Ethnicity, mean)
JOL.w2.l = cast(subset(com.JOL,
com.JOL$participant.ethnicity == "White" & com.JOL$Target_Typicality == "L"),
Username ~ Target_Ethnicity, mean)
##Run the t-test
##high black
temp = t.test(JOL.b2.h$B, JOL.b2.h$W, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #significant!
sd(JOL.b2.h$B)
sd(JOL.b2.h$W)
##high white
temp = t.test(JOL.w2.h$B, JOL.w2.h$W, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #marginal
pbic1 = JOL.w2.h[ , c(1:2)]
pbic1$t = rep('b')
colnames(pbic1)[2] = "score"
pbic2 = JOL.w2.h[ , c(1, 3)]
pbic2$t = rep('w')
colnames(pbic2)[2] = "score"
pbic3 = rbind(pbic1, pbic2)
model.pbic = ezANOVA(pbic3,
dv = score,
within = t,
wid = Username,
type = 3,
detailed = T)
model.pbic
##low black#
temp = t.test(JOL.b2.h$W, JOL.b2.l$W, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #significant
mean(JOL.b2.h$W)
mean(JOL.b2.l$W)
##Low white
temp = t.test(JOL.w2.l$B, JOL.w2.l$W, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92 #non-Signficant
#get pbic
pbic1 = JOL.w2.l[ , c(1:2)]
pbic1$t = rep('b')
colnames(pbic1)[2] = "score"
pbic2 = JOL.w2.l[ , c(1, 3)]
pbic2$t = rep('w')
colnames(pbic2)[2] = "score"
pbic3 = rbind(pbic1, pbic2)
model.pbic = ezANOVA(pbic3,
dv = score,
within = t,
wid = Username,
type = 3,
detailed = T)
model.pbic
####GAMMAS####
##Okay, need black and white datasets w/ JOLs and Recog
###Start w/ Black participants
##need to get separate columns for JOLs and recog
black.j = subset(black,
black$Task == "JOL")
black.r = subset(black,
black$Task == "recog")
black2 = cbind(black.j, black.r[ , 7])
colnames(black2)[7:8] = c("JOL", "Recog")
black.high2 = subset(black2,
black2$Target_Typicality == "H")
black.low2 = subset(black2,
black2$Target_Typicality == "L")
##High_typ
black.high.b = subset(black.high2,
black.high2$Target_Ethnicity == "B")
black.high.w = subset(black.high2,
black.high2$Target_Ethnicity == "W")
##now low_typ
black.low.b = subset(black.low2,
black.low2$Target_Ethnicity == "B")
black.low.w = subset(black.low2,
black.low2$Target_Ethnicity == "W")
###And white participants
##need to get separate columns for JOLs and recog
white.j = subset(white,
white$Task == "JOL")
white.r = subset(white,
white$Task == "recog")
white2 = cbind(white.j, white.r[ , 7])
colnames(white2)[7:8] = c("JOL", "Recog")
white.high2 = subset(white2,
white2$Target_Typicality == "H")
white.low2 = subset(white2,
white2$Target_Typicality == "L")
##High typ
white.high.b = subset(white.high2,
white.high2$Target_Ethnicity == "B")
white.high.w = subset(white.high2,
white.high2$Target_Ethnicity == "W")
##now low_typ
white.low.b = subset(white.low2,
white.low2$Target_Ethnicity == "B")
white.low.w = subset(white.low2,
white.low2$Target_Ethnicity == "W")
#####okay, gamma time?####
##Compute mean gammas
library(vcdExtra)
library(Hmisc)
##Start with black participants
#High black targets
empty = data.frame()
for (i in unique(black.high.b$Username)){
temp = subset(black.high.b, black.high.b$Username == i)
g = rcorr.cens(temp$Recog, temp$JOL, outx = TRUE)[2]
g = unname(g)
temp2 = data.frame(i, g)
empty = rbind(temp2, empty)
}
black_high.b.2 = empty
##Low black targets
empty = data.frame()
for (i in unique(black.low.b$Username)){
temp = subset(black.low.b, black.low.b$Username == i)
g = rcorr.cens(temp$Recog, temp$JOL, outx = TRUE)[2]
g = unname(g)
temp2 = data.frame(i, g)
empty = rbind(temp2, empty)
}
black_low.b.2 = empty
##High white targets
empty = data.frame()
for (i in unique(black.high.w$Username)){
temp = subset(black.high.w, black.high.w$Username == i)
g = rcorr.cens(temp$Recog, temp$JOL, outx = TRUE)[2]
g = unname(g)
temp2 = data.frame(i, g)
empty = rbind(temp2, empty)
}
black_high.w.2 = empty
##low white targets
empty = data.frame()
for (i in unique(black.low.w$Username)){
temp = subset(black.low.w, black.low.w$Username == i)
g = rcorr.cens(temp$Recog, temp$JOL, outx = TRUE)[2]
g = unname(g)
temp2 = data.frame(i, g)
empty = rbind(temp2, empty)
}
black_low.w.2 = empty
###Now white participants
#High black targets
empty = data.frame()
for (i in unique(white.high.b$Username)){
temp = subset(white.high.b, white.high.b$Username == i)
g = rcorr.cens(temp$Recog, temp$JOL, outx = TRUE)[2]
g = unname(g)
temp2 = data.frame(i, g)
empty = rbind(temp2, empty)
}
white_high.b.2 = empty
##Low black targets
empty = data.frame()
for (i in unique(white.low.b$Username)){
temp = subset(white.low.b, white.low.b$Username == i)
g = rcorr.cens(temp$Recog, temp$JOL, outx = TRUE)[2]
g = unname(g)
temp2 = data.frame(i, g)
empty = rbind(temp2, empty)
}
white_low.b.2 = empty
##High white targets
empty = data.frame()
for (i in unique(white.high.w$Username)){
temp = subset(white.high.w, white.high.w$Username == i)
g = rcorr.cens(temp$Recog, temp$JOL, outx = TRUE)[2]
g = unname(g)
temp2 = data.frame(i, g)
empty = rbind(temp2, empty)
}
white_high.w.2 = empty
##low white targets
empty = data.frame()
for (i in unique(white.low.w$Username)){
temp = subset(white.low.w, white.low.w$Username == i)
g = rcorr.cens(temp$Recog, temp$JOL, outx = TRUE)[2]
g = unname(g)
temp2 = data.frame(i, g)
empty = rbind(temp2, empty)
}
white_low.w.2 = empty
####Gamma analyeses####
##White
white_high.b.2$typicality = rep("H")
white_high.b.2$target_ethnicity = rep("B")
white_high.b.2$participant = rep("White")
white_high.w.2$typicality = rep("H")
white_high.w.2$target_ethnicity = rep("W")
white_high.w.2$participant = rep("White")
white_low.b.2$typicality = rep("L")
white_low.b.2$target_ethnicity = rep("B")
white_low.b.2$participant = rep("White")
white_low.w.2$typicality = rep("L")
white_low.w.2$target_ethnicity = rep("W")
white_low.w.2$participant = rep("White")
##Black
black_high.b.2$typicality = rep("H")
black_high.b.2$target_ethnicity = rep("B")
black_high.b.2$participant = rep("Black")
black_high.w.2$typicality = rep("H")
black_high.w.2$target_ethnicity = rep("W")
black_high.w.2$participant = rep("Black")
black_low.b.2$typicality = rep("L")
black_low.b.2$target_ethnicity = rep("B")
black_low.b.2$participant = rep("Black")
black_low.w.2$typicality = rep("L")
black_low.w.2$target_ethnicity = rep("W")
black_low.w.2$participant = rep("Black")
##now put it all together
gamma_ANOVA = rbind(white_high.w.2, white_high.b.2,
white_low.w.2, white_low.b.2,
black_high.b.2, black_high.w.2,
black_low.b.2, black_low.w.2)
#get rid of nan's
is.nan.data.frame <- function(x)
do.call(cbind, lapply(x, is.nan))
gamma_ANOVA[is.nan(gamma_ANOVA)] <- 0
gamma_ANOVA$i = as.character(gamma_ANOVA$i)
##Okay, anova time!
high_gamma = ezANOVA(subset(gamma_ANOVA,
gamma_ANOVA$typicality == "H"),
within = target_ethnicity,
between = participant,
wid = i,
dv = g,
type = 3,
detailed = T)
high_gamma$ANOVA$MSE = high_gamma$ANOVA$SSd/high_gamma$ANOVA$DFd
aovEffectSize(high_gamma, effectSize = "pes") #significant main effect of target ethnicity
low_gamma = ezANOVA(subset(gamma_ANOVA,
gamma_ANOVA$typicality == "L"),
within = target_ethnicity,
between = participant,
wid = i,
dv = g,
type = 3,
detailed = T)
low_gamma$ANOVA$MSE = low_gamma$ANOVA$SSd/low_gamma$ANOVA$DFd
aovEffectSize(low_gamma, effectSize = "pes") #significant main effect of target ethnicity
#get means
high.g = subset(gamma_ANOVA,
gamma_ANOVA$typicality == "H")
low.g = subset(gamma_ANOVA,
gamma_ANOVA$typicality == "L")
tapply(high.g$g, high.g$participant, mean)
tapply(high.g$g, high.g$target_ethnicity, mean)
tapply(high.g$g, list(high.g$target_ethnicity, high.g$participant), mean)
tapply(low.g$g, low.g$participant, mean)
tapply(low.g$g, low.g$target_ethnicity, mean)
tapply(low.g$g, list(low.g$target_ethnicity, low.g$participant), mean)
####RTs####
tapply(RT_data$Response.RT, list(RT_data$participant.ethnicity, RT_data$Target_Ethnicity), mean)
#remove outliers
temp3 = data.frame()
for(i in unique(RT_data$Username)){
temp4 = subset(RT_data,
RT_data$Username == i)
temp4$zRT = scale(temp4$Response.RT)
temp3 = rbind(temp3, temp4)
}
ZRT = temp3
ZRT = subset(ZRT,
ZRT$zRT < 3)
#let's also drop any RTs that are less than second
ZRT = subset(ZRT,
ZRT$Response.RT > 1000)
#and finally, any RTs above 15 seconds
ZRT = subset(ZRT,
ZRT$Response.RT < 15000)
tapply(ZRT$Response.RT, list(ZRT$participant.ethnicity, ZRT$Target_Ethnicity), mean)
##run an ANOVA
model_RT = ezANOVA(ZRT,
between = participant.ethnicity,
within = Target_Ethnicity,
wid = Username,
dv = Response.RT,
type = 3,
detailed = T)
model_RT
model_RT$ANOVA$MSE = model_RT$ANOVA$SSd/model_RT$ANOVA$DFd
model_RT$ANOVA$MSE
aovEffectSize(model_RT, effectSize = "pes") #interaction is marginal
##main effects
tapply(ZRT$Response.RT, ZRT$participant.ethnicity, mean)
tapply(ZRT$Response.RT, ZRT$Target_Ethnicity, mean)
####Test for typicality effects####
ZRT.H = subset(ZRT,
ZRT$Target_Typicality == "H")
ZRT.L = subset(ZRT,
ZRT$Target_Typicality == "L")
###run separate models
##high model
model_RT.H = ezANOVA(ZRT.H,
between = participant.ethnicity,
within = Target_Ethnicity,
wid = Username,
dv = Response.RT,
type = 3,
detailed = T)
model_RT.H
model_RT.H$ANOVA$MSE = model_RT.H$ANOVA$SSd/model_RT.H$ANOVA$DFd
model_RT.H$ANOVA$MSE
aovEffectSize(model_RT.H, effectSize = "pes") #No interaction, no main effect of target ethnicity
##low model
model_RT.L = ezANOVA(ZRT.L,
between = participant.ethnicity,
within = Target_Ethnicity,
wid = Username,
dv = Response.RT,
type = 3,
detailed = T)
model_RT.L
model_RT.L$ANOVA$MSE = model_RT.L$ANOVA$SSd/model_RT.L$ANOVA$DFd
model_RT.L$ANOVA$MSE
aovEffectSize(model_RT.L, effectSize = "pes") #Again, no interaction
##get means
#interactions
tapply(ZRT.H$Response.RT, list(ZRT.H$Target_Ethnicity, ZRT.H$participant.ethnicity), mean)
tapply(ZRT.L$Response.RT, list(ZRT.L$Target_Ethnicity, ZRT.L$participant.ethnicity), mean)
#ME participant ethnicity
tapply(ZRT.H$Response.RT, ZRT.H$participant.ethnicity, mean)
tapply(ZRT.L$Response.RT, ZRT.L$participant.ethnicity, mean)
#ME Target ethnicity
tapply(ZRT.H$Response.RT, ZRT.H$Target_Ethnicity, mean)
tapply(ZRT.L$Response.RT, ZRT.L$Target_Ethnicity, mean)
##get data in long format for SDs
ZRT.H.long.W = cast(subset(ZRT.H,
ZRT.H$participant.ethnicity == "White"),
Username ~ Target_Ethnicity, mean, value = "Response.RT")
ZRT.H.long.b = cast(subset(ZRT.H,
ZRT.H$participant.ethnicity == "Black"),
Username ~ Target_Ethnicity, mean, value = "Response.RT")
apply(ZRT.H.long.W, 2, sd)
apply(ZRT.H.long.b, 2, sd)
ZRT.L.long.W = cast(subset(ZRT.L,
ZRT.L$participant.ethnicity == "White"),
Username ~ Target_Ethnicity, mean, value = "Response.RT")
ZRT.L.long.b = cast(subset(ZRT.L,
ZRT.L$participant.ethnicity == "Black"),
Username ~ Target_Ethnicity, mean, value = "Response.RT")
apply(ZRT.L.long.W, 2, sd)
apply(ZRT.L.long.b, 2, sd)
apply(ZRT.H.long.W, 2, sd)
apply(ZRT.L.long.b, 2, sd)
